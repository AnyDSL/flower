extern "C" {
    fn magic_plane_id(Plane) -> Plane;
    fn magic_spheres_id([Sphere * 3]) -> [Sphere * 3];
    // drand48 only available for OpenCL on the CPU
    // TODO: provide own implementation on the GPU
    fn drand48() -> f64;
}

fn iteration(out: Buffer, width: i32, height: i32,
             body: fn(i32, i32, Buffer) -> ()
            ) -> () {
    let grid   = (width, height, 1);
    let block  = (32, 4, 1);

    let out_gpu = acc_alloc(acc_dev(), width * height * 3 * 1);
    copy(out, out_gpu, width * height * 3 * 1);

    for benchmark_acc() {
        acc(acc_dev(), grid, block, || @{
            body(acc_gidx(), acc_gidy(), out_gpu);
        });
    }

    copy(out_gpu, out, width * height * 3 * 1);
    release(out_gpu);
}

