extern "C" {
    fn magic_plane_id(Plane) -> Plane;
    fn magic_spheres_id([Sphere * 3]) -> [Sphere * 3];
    // drand48 only available for OpenCL on the CPU
    // TODO: provide own implementation on the GPU
    fn drand48() -> f64;
}
extern "thorin" {
    fn "mmap" mmap_u8(&[u8], int, int, int, int) -> &[u8];
    fn "munmap" munmap_u8(&[u8]) -> ();
}

fn iteration(out: &[u8], width: int, height: int,
             body: fn(int, int, &[u8]) -> ()
            ) -> () {
    let grid   = (width, height, 1);
    let block  = (32, 4, 1);

    let out = mmap_u8(out, acc_dev(), acc_mem(), 0, width * height * 3);

    acc(acc_dev(), grid, block, || @{
        body(acc_gidx(), acc_gidy(), out);
    });
}

