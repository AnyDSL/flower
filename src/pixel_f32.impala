type pixel_t = f32;

static nvvm_ldg = nvvm_ldg_f32;
static cuda_ldg = cuda_ldg_f32;

fn @is_same_pixel(a: f32, b: f32) -> bool { cpu_fabsf(a - b) < 0.01:f32 }
fn @print_pixel[T](pixel: T) -> () { print_f32(bitcast[pixel_t](pixel)) }
fn @absolute(a: f32) -> f32 {math.fabsf(a)}

//fn @bitcast_channel (c: &mut channel1_f32) -> [pixel_t * 2] { bitcast_channel_f32(c) }
