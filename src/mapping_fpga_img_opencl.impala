// ---------------------------- streaming --------------------------------------

fn @get_global_read_vec1(img: Img) -> fn(i32) -> [pixel_t * 1] {
    let ptr = bitcast[&addrspace(1)[[pixel_t * 1]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}


fn @get_global_read_vec2(img: Img) -> fn(i32) -> [pixel_t * 2] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  2]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_read_vec4(img: Img) -> fn(i32) -> [pixel_t * 4] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  4]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_read_vec8(img: Img) -> fn(i32) -> [pixel_t * 8] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  8]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_read_vec16(img: Img) -> fn(i32) -> [pixel_t * 16] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  16]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_read_vec32(img: Img) -> fn(i32) -> [pixel_t * 32] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  32]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_read_vec64(img: Img) -> fn(i32) -> [pixel_t * 64] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  64]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_read_vec128(img: Img) -> fn(i32) -> [pixel_t * 128] {
    let ptr = bitcast[&addrspace(1)[[pixel_t *  128]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx| { ptr($idx) }
}

fn @get_global_write_vec1(img: Img) -> fn(i32, [pixel_t * 1]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t * 1]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value }
}

fn @get_global_write_vec2(img: Img) -> fn(i32, [pixel_t * 2]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  2]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}

fn @get_global_write_vec4(img: Img) -> fn(i32, [pixel_t * 4]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  4]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}

fn @get_global_write_vec8(img: Img) -> fn(i32, [pixel_t * 8]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  8]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}

fn @get_global_write_vec16(img: Img) -> fn(i32, [pixel_t * 16]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  16]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}

fn @get_global_write_vec32(img: Img) -> fn(i32, [pixel_t * 32]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  32]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}

fn @get_global_write_vec64(img: Img) -> fn(i32, [pixel_t * 64]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  64]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}

fn @get_global_write_vec128(img: Img) -> fn(i32, [pixel_t * 128]) -> () {
    let ptr = bitcast[&mut addrspace(1)[[pixel_t *  128]]](bitcast[&addrspace(1)[pixel_t]](img.buf.data));
    |idx, value| { ptr($idx) = value; }
}
